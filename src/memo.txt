/*code hierarchy*/
class App extends Component{
  constructor(props) {
    super(props);
    this.state = {
      pageTrans: false,
    };
    this.clearView = this.clearView.bind(this);
  }

  clearView(e){
    console.log(this.state.pageTrans);
    this.setState(() => {
      return { pageTrans: true };
    });
    console.log(this.state.pageTrans);
    setTimeout(() => {
      this.setState({ pageTrans: false });
    }, 600);
    console.log(this.state.pageTrans);
  }
  
  render() {
    return (
      <BrowserRouter>
        <div>
          <nav className="navbar navbar-toggleable-sm navbar_global" id="globalNavi">
            <button className="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarToggler" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggle navigation">
                <span></span>
                <span></span>
                <span></span>
                <p className="navbar-toggler_text">MENU</p>
            </button>
            <div className="collapse navbar-collapse" id="navbarToggler">
              <ul className="navbar-nav mr-auto ml-auto mt-md-2 mt-lg-0">
                <li className="page_item home_button">
                  <Link to='/'  onClick={ () => this.clearView()} >
                    <p className="home_button_element_text">HOME</p>
                    <img className="home_button_element_outer" alt="home button outer" src={homeButtonOuterRing} />
                    <img className="home_button_element_middle" alt="home button middle" src={homeButtonMiddleRing} />
                    <img className="home_button_element_inner" alt="home button inner" src={homeButtonInnerRing} />
                    <img className="home_button_element_stick" alt="home button stick" src={homeButtonStick} />
                  </Link>
                </li>
                <li className="page_item_wrapper">
                  <div className="page_item"  onClick={ () => this.clearView()} >
                    <Link to='/about' className="font-sm">ABOUT</Link>
                  </div>
                  <div className="page_item" onClick={ () => this.clearView()} >
                    <Link to='/friends' className="font-sm">THE WORKS</Link>
                  </div>
                </li>
              </ul>
            </div>
          </nav>
          <Switch>
            <Route exact path='/' render={props => <Home pageTrans={this.state.pageTrans} />}/>
            <Route exact path='/about' component={About} />
            <Route exact path='/friends' component={Friends} />
          </Switch>
        </div>
      </BrowserRouter>
    )
  }
}

const Lp = () => (
  <div className="container-fluid lp_back flex">
    <h1 className="lp_title">THINK!</h1>
    <p className="lp_text">GO TO SITEâ†’</p>
  </div>
)

class Home extends Component{
  constructor(props) {
    super(props);
    this.state = {
    };
  }

  render(){
    const pageTransition = ClassNames(
      "container-fluid",
      "base_back",
      "flex",
      {
        "pageTransitioning": this.state.pageTrans === true
      }
    );
    return(
      <div>
        <main>
          <div className={pageTransition}>
            <div className="base_sidebar">
              <span className="base_sidebar_inner"></span>
            </div>
            <div className="base_sidebar">
              <span className="base_sidebar_inner"></span>
            </div>
            <div className="base_content">
          <div className="wrapper flex">
            <img src={headerItemImgs} className="header_item" alt="header background" />
            <header>
              <h1 className="header_title font-xl glitch glitch-alltime" data-text="PORTFOLIO SITE">PORTFOLIO SITE</h1>
              <p className="header_text font-xs">AUTHOR:<span className="font-xxs">HARUKI KAWASHITA{this.props.pageTrans}</span></p>
            </header>
          </div>
            </div>
          </div>
        </main>
        <footer>
          <div className="footer flex">
            <div className="footer_btn-group flex">
              <Link to='/' className="footer_btn">
                <span className="btn-body font-xs flex">TOP</span>
              </Link>
              <Link to='/' className="footer_btn">
                <span className="btn-body font-xs flex">TOP</span>
              </Link>
              <Link to='/' className="footer_btn">
                <span className="btn-body font-xs flex">TOP</span>
              </Link>
            </div>
          </div>
        </footer>
      </div>
    )
  }
}

class About extends Component{ 
  constructor(props) {
    super(props);
    this.state = {
    };
  }

  render(){
    const pageTransition = ClassNames(
      "container-fluid",
      "base_back",
      "flex",
      {
        "pageTransitioning": this.props.pageTrans === true
      }
    );
    return(
      <BrowserRouter>
        <div>
          <main>
            <div className={pageTransition}>
              <div className="base_sidebar">
                <span className="base_sidebar_inner"></span>
              </div>
              <div className="base_sidebar">
                <span className="base_sidebar_inner"></span>
              </div>
              <div className="base_content">
                <div className="wrapper flex">
                  <section>
                    <h1 className="About_title font-lg">ABOUT ME</h1>
                    <Switch>
                      <Route exact path="/about" component={About_intro} />
                      <Route exact path="/about/skills" component={About_skills} />
                    </Switch>
                  </section>
                </div>
              </div>
            </div>
          </main>
          <footer>
            <div className="footer flex">
              <div className="footer_btn-group flex">
                <Link to='/' className="footer_btn">
                  <span className="btn-body font-xs flex">TOP</span>
                </Link>
                <Link to='/' className="footer_btn">
                  <span className="btn-body font-xs flex">TOP</span>
                </Link>
                <Link to='/' className="footer_btn">
                  <span className="btn-body font-xs flex">TOP</span>
                </Link>
              </div>
            </div>
          </footer>
        </div>
      </BrowserRouter>
    )
  }
}
/*routing example*/
class FooterAbout extends Component{
  constructor(props) {
    super(props);
    this.state = {
    };
  }

  componentWillMount() {
    PAGEABOUT.forEach(pageAbout => {
      this.setState({
        ...this.state,
        [pageAbout.id]: 0
      })
    })
  }
  render(){
    return(
      <footer>
        <div className="footer flex">
          <PageAboutList grandsonClear={this.parentClear}/>
        </div>
      </footer>
    )
  }
}

const PAGEABOUT = [
  {
    number: '0',
    string: ''
  },
  {
    number: '1',
    string: 'skills'
  }
]
class PageAboutList extends Component{
  render(){
    return(
      <div className="footer_btn-group flex">
        {PAGEABOUT.map(pageAbout => (
            <NavLink activeStyle={{ backgroundColor: 'red' }} to={`/about/${pageAbout.string}`} className="footer_btn" onClick={ () => this.props.grandsonClear()}>
              <span className="btn-body font-xs flex">{pageAbout.number}</span>
            </NavLink>
        ))}
      </div>
    )
  }
}
const About = () => (
        <div className="wrapper flex">
          <section>
            <h1 className="About_title font-lg">ABOUT ME</h1>
              <Route exact path="/about" component={About_intro} />
              <Route path="/about/:id" render={props => <AboutSkills />} />
          </section>
        </div>
    )
const About_intro =() =>(
  <table className="table About_text font-sm">
    <tbody>
      <tr>
        <th scope="row">name</th>
        <td>haruki kawashita</td>
      </tr>
      <tr>
        <th scope="row">job</th>
        <td>College students</td>
      </tr>
      <tr>
        <th scope="row">HOBBY</th>
        <td>tennis, cooking, <span className="nowrap">movie appreciation</span></td>
      </tr>
      <tr>
        <th scope="row">TREND</th>
        <td>pancake</td>
      </tr>
    </tbody>
  </table>
)

/*footer btn example*/
<div className="footer_btn-group flex">
                <Link to='/' className="footer_btn">
                  <span className="btn-body font-sm flex">
                    <svg xmlns="http://www.w3.org/2000/svg"
                        width="0.388889in" height="0.541667in"
                        viewBox="0 0 28 39">
                      <path id="arrow" fill="#060419" d="M 8.99,0.00
                              C 10.54,1.54 24.86,15.79 28.47,19.53
                                28.47,19.53 8.99,38.99 8.99,38.99
                                8.99,38.99 -1.87,38.96 -1.87,38.96
                                3.43,33.52 12.31,24.70 17.52,19.52
                                13.09,15.17 2.75,4.98 -1.78,0.04
                                0.49,0.05 7.47,0.00 8.99,0.00 Z" />
                    </svg>
                  </span>
                </Link>
                <Link to='/' className="footer_btn">
                  <span className="btn-body font-sm flex">TOP</span>
                </Link>
              </div>
	&_btn-group{
		height: 100%;
	}
	&_btn{
		position: relative;
		display: inline-block;
		background-color: $accentColor;

		&:nth-of-type(1){
			height: 50%;
			width: (9vh/1.7321);
			margin-right: 10vh;

			&::before,&::after{
				content: "";
				position: absolute;
				display: inline-block;
				top: 0;
				width: 130%;
				height: 100%;
				z-index: 900;
			}
			&::before{
				right: -130%;
				background-image: url(../images/footer_side-inner.png);
				background-size: contain;
				background-repeat: no-repeat;
			}
			&::after{
				left: -130%;
				background-image: url(../images/footer_side-outer.png);
				background-position: right;
				background-size: contain;
				background-repeat: no-repeat;
			}
		}
		&:nth-of-type(2){
			height: 100%;
			width: (18vh/1.7321);

			&::before,&::after{
				content: "";
				position: absolute;
				display: inline-block;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				background-color: $accentColor;
				z-index: 900;
			}
			&::before{
				transform: rotate(60deg);
			}
			&::after{
				transform: rotate(-60deg);
			}
			
			& .btn-body{
				position: absolute;
				width: 100%;
				height:100%;
				z-index: 920;
				color: $mainColor;

				&::before{
					content: "";
					position: absolute;
					display: block;
					width: 230%;
					height:110%;
					background-image: url(../images/footer_centerCover.png);
					background-size: contain;
					background-repeat: no-repeat;
				}
			}
		}
	}